@startuml
package "eu:happycoders:shop:adapter:in:rest" {
    package "cart" {
        class EmptyCartController<<adapter>> {}
        class GetCartController<<adapter>> {}
        class AddToCartController<<adapter>> {}
    }
    package "product" {
        class GetProductController<<adapter>> {}
        class FindProductsController<<adapter>> {}
    }
}

package "eu:happycoders:shop:application:port:in" {
    package "cart" {
        interface EmptyCartUseCase<<port>> {}
        interface GetCartUseCase<<port>> {}
        interface AddToCartUseCase<<port>> {}

        EmptyCartController --> EmptyCartUseCase
        GetCartController --> GetCartUseCase
        AddToCartController --> AddToCartUseCase
    }
    package "product" {
        interface GetProductUseCase<<port>> {}
        interface FindProductsUseCase<<port>>

        GetProductController --> GetProductUseCase
        FindProductsController --> FindProductsUseCase
    }
}

package "eu:happycoders:shop:application:service" {
    package "cart" {
        EmptyCartUseCase <|.. EmptyCartService
        GetCartUseCase <|.. GetCartService
        AddToCartUseCase <|.. AddToCartService
    }
    package "product" {
        GetProductUseCase <|.. GetProductService
        FindProductsUseCase <|.. FindProductsService
    }
}

package "eu:happycoders:shop:application:port:out:persistence" {
        interface CartRepository<<port>>
        interface ProductRepository<<port>>

        AddToCartService --> CartRepository
        AddToCartService --> ProductRepository
        EmptyCartService --> CartRepository
        GetCartService --> CartRepository

        FindProductsService --> ProductRepository
        GetProductService --> ProductRepository
}

package "eu:happycoders:shop:adapter:out:persistence" {
        class InMemoryCartRepository<<adapter>> {}
        class InMemoryProductRepository<<adapter>> {}

        CartRepository <|.. InMemoryCartRepository
        ProductRepository <|.. InMemoryProductRepository
}
@enduml